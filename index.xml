<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Home on Elementary</title><link>https://forensicanalysis.github.io/documentation/</link><description>Recent content in Home on Elementary</description><generator>Hugo -- gohugo.io</generator><atom:link href="https://forensicanalysis.github.io/documentation/index.xml" rel="self" type="application/rss+xml"/><item><title>Acquisition with the artifactcollector</title><link>https://forensicanalysis.github.io/documentation/manual/usage/acquisition/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://forensicanalysis.github.io/documentation/manual/usage/acquisition/</guid><description>The artifactcollector behaves like malware as it collects critical system files and might be detected as a virus or malware. What is the artifactcollector? The artifactcollector is a tool to collect forensic artifacts on a system. It can be used in forensic investigations to extract specific data instead of creating full disk images. The artifactextractor can collect low-level (like $MFT) and high-level file artifacts as well as registry keys (e.</description></item><item><title>Processing with elementary</title><link>https://forensicanalysis.github.io/documentation/manual/usage/processing/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://forensicanalysis.github.io/documentation/manual/usage/processing/</guid><description>Elementary is a command line tool that can create and process forensicstore files.
Unpack forensicstores To extract all file artifacts stored in the forensicstore you can use:
elementary archive unpack TestMachine.forensicstore More examples:
# Extract all prefetch files elementary archive unpack --match &amp;#34;*.pf&amp;#34; TestMachine.forensicstore # Extract all windows eventlogs recreateing the original folder structure elementary archive unpack --match &amp;#34;*.evtx&amp;#34; --mode folder \ --prefix-artifact=false TestMachine.forensicstore Run forensic tasks The elementary command line tool can run single commands, e.</description></item><item><title>Collect custom artifacts</title><link>https://forensicanalysis.github.io/documentation/manual/development/customize/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://forensicanalysis.github.io/documentation/manual/development/customize/</guid><description>Forensic investigations differ and investigators have different approaches in forensic cases. The artifactcollector can cater to these needs by collecting a different set of artifacts related to the situation.
Collect a custom set of artifacts Clone the repository git clone https://github.com/forensicanalysis/artifactcollector. Run go generate to download all artifacts. Add artifact definition yaml files as needed in pack/artifacts. Do not edit the artifact definitions, as they will be overwritten. Edit pack/ac.</description></item><item><title>Cross compilation</title><link>https://forensicanalysis.github.io/documentation/manual/development/cross/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://forensicanalysis.github.io/documentation/manual/development/cross/</guid><description>Cross compilation is a bit more difficult, as a cross compiler like MinGW is required by CGO.
Example cross compilation for Windows:
CGO_ENABLED=1 CC=i686-w64-mingw32-gcc GOOS=windows GOARCH=386 go build . CGO_ENABLED=1 CC=x86_64-w64-mingw32-gcc GOOS=windows GOARCH=amd64 go build .</description></item><item><title>Elementary plugins</title><link>https://forensicanalysis.github.io/documentation/manual/development/plugins/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://forensicanalysis.github.io/documentation/manual/development/plugins/</guid><description>Command types There are three commands types: Built-in Go Commands, Docker Commands or Script Commands.
Built-in command elementary contains some builtin commands. Those cannot be dynamically extended via plugins.
Docker commands Docker commands utilize installed docker images. Those images need to be named xxx/elementary-yyy. elementary loads some image on startup but also handles other images matching the naming schema.
Script commands Script commands are rum from the config dir. The config is located at:</description></item><item><title>Forensicstore</title><link>https://forensicanalysis.github.io/documentation/manual/development/forensicstore/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://forensicanalysis.github.io/documentation/manual/development/forensicstore/</guid><description>A forensicstore is a forensic database that contains selected forensic artifacts.
The forensicstore format (version 2) The forensicstore format implements the following conventions:
The forensicstore is a sqlite 3 database containing metadata element and compressed raw artifacts. The elements table contains all collected registry keys and values as well as metadata on files, paths, and processes. The files themselves as well as any process output is saved in the sqlar table.</description></item><item><title>Print View</title><link>https://forensicanalysis.github.io/documentation/print/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://forensicanalysis.github.io/documentation/print/</guid><description/></item></channel></rss>