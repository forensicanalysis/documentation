<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Development on Elementary</title><link>/docs/development/</link><description>Recent content in Development on Elementary</description><generator>Hugo -- gohugo.io</generator><atom:link href="/docs/development/index.xml" rel="self" type="application/rss+xml"/><item><title>Customization</title><link>/docs/development/customize/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/docs/development/customize/</guid><description>TODO
Collect a custom set of artifacts (Advanced) TODO
Add functionality like SFTP upload (Expert) TODO</description></item><item><title>Create a Plugin</title><link>/docs/development/plugins/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/docs/development/plugins/</guid><description>TODO
Create a simple python plugin TODO
Create an advanced python plugin TODO
Create a Go plugin TODO
Create a docker plugin TODO</description></item><item><title>Architecture</title><link>/docs/development/architecture/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/docs/development/architecture/</guid><description>The forensicstore format The forensicstore format implements the following conventions:
The forensicstore is a folder containing an item.db file and an arbitrary number of other folders. The item.db file contains metadata for all extracted artifacts in a forensic investigation in flattened json objects in a sqlite database. Items are represented as json objects. Items are valid STIX 2.0 Observable Objects where applicable. Items must not have dots (&amp;quot;.&amp;quot;) in their json keys.</description></item><item><title>Development Guidelines</title><link>/docs/development/guidelines/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/docs/development/guidelines/</guid><description>Code No overengineering, solve real problem first Be explicit, use no magic Stability over features Code Review Use Code Reviews where possible Maximum Linter Stable master Never commit to master Use Semantic Versioning CLI Use known options where possible (e.g. &amp;ndash;verbose, &amp;ndash;version, &amp;ndash;help, &amp;ndash;output) Use git and docker as examples for nested command line tools GUI</description></item></channel></rss>